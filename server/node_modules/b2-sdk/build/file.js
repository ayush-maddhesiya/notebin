"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
function getComponentStyleFile(f) {
    return f.children ? f.children.find(c => c.type === "less") : null;
}
exports.getComponentStyleFile = getComponentStyleFile;
class B2FileType {
    static createComponentFile(config) {
        return {
            type: "huz",
            handle: config.handle,
            path: config.path || "",
            override_params: config.override_params || {},
            content: config.template,
            children: [{ type: "less", content: config.style || "" }]
        };
    }
    static createStyleFile(config) {
        return {
            type: "less",
            handle: config.handle,
            content: config.style
        };
    }
}
exports.B2FileType = B2FileType;
class B2File {
    constructor(client, entryPath, isRef = false) {
        this.isRef = isRef;
        this.c = client;
        this.path = `${entryPath}/page/file`;
    }
    listAll() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("GET", this.path);
        });
    }
    get(id) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("GET", `${this.path}/${id}`);
        });
    }
    getByHandle(handle) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("GET", `${this.path}-by-handle/${handle}`);
        });
    }
    create(file) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("POST", this.path, file);
        });
    }
    update(file) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("PUT", `${this.path}/${file.id}?revision=${file.revision}`, file);
        });
    }
    delete(id) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("DELETE", `${this.path}/${id}`);
        });
    }
    walk(fn) {
        return __awaiter(this, void 0, void 0, function* () {
            const files = yield this.listAll();
            for (let i = 0; i < files.length; i++) {
                const file = yield this.get(files[i].id);
                yield fn(file, i, files.length);
            }
        });
    }
    walkAndUpdate(fn) {
        return __awaiter(this, void 0, void 0, function* () {
            const self = this;
            yield this.walk(function (file, i, n) {
                return __awaiter(this, void 0, void 0, function* () {
                    const save = yield fn(file, i, n);
                    if (save) {
                        yield self.update(file);
                    }
                });
            });
        });
    }
    getSnapshot() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("GET", `${this.path}-snapshot`);
        });
    }
    getSnapshotItems(items) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("POST", `${this.path}-snapshot-items`, items);
        });
    }
}
exports.B2File = B2File;
//# sourceMappingURL=file.js.map