"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const FormData = require("form-data");
const Path = require("path");
class B2Asset {
    constructor(client, path = "/asset") {
        this.path = path;
        this.c = client;
    }
    list(path = "/") {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("GET", this.path, null, {
                params: {
                    path
                }
            });
        });
    }
    upload(path, files) {
        return __awaiter(this, void 0, void 0, function* () {
            const form = new FormData();
            for (const f of files) {
                form.append("files[]", f.content, f.filename);
            }
            return yield this.c.request("POST", this.path, form, {
                headers: form.getHeaders(),
                params: { path: Path.join("/", path) + "/" }
            });
        });
    }
    delete(path) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.c.request("DELETE", `${this.path}/${encodeURIComponent(path)}`);
        });
    }
}
exports.B2Asset = B2Asset;
//# sourceMappingURL=asset.js.map