"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const test = require("blue-tape");
const meta_1 = require("./meta");
const TEST_META = { "name": "B2 Documentation", "version": "0.3.9", "basePublicURL": "http://b2.ventmere.com", "env": "development", "modules": [{ "type": "cors", "version": "0.1.3", "metadata": {} }, { "type": "auth", "version": "0.5.0", "metadata": {} }, { "type": "asset", "version": "0.2.1", "metadata": { "endpoint": "http://cdn.ventmere.com/b2doc" } }, { "type": "composer", "version": "0.3.1", "metadata": { "entries": { "/zh_cn": { "name": "Chinese", "version": "0.3.9", "env": "development", "modules": [{ "type": "page", "version": "0.17.6", "metadata": {} }, { "type": "basics", "version": "0.8.9", "metadata": {} }, { "type": "schema", "version": "0.6.2", "metadata": {} }] }, "/us_en": { "name": "English", "version": "0.3.9", "env": "development", "modules": [{ "type": "page", "version": "0.17.6", "metadata": {} }, { "type": "basics", "version": "0.8.9", "metadata": {} }, { "type": "schema", "version": "0.6.2", "metadata": {} }] }, "/__root": { "name": "Root", "version": "0.3.9", "env": "development", "modules": [{ "type": "page", "version": "0.17.6", "metadata": {} }, { "type": "basics", "version": "0.8.9", "metadata": {} }, { "type": "schema", "version": "0.6.2", "metadata": {} }] } } } }] };
test("meta.parseMeta", function (t) {
    return __awaiter(this, void 0, void 0, function* () {
        const meta = meta_1.parseMeta(TEST_META);
        t.equal(meta.name, "B2 Documentation", "name");
        t.equal(meta.publicURL, "http://b2.ventmere.com", "publicURL");
        t.assert(Array.isArray(meta.referencedModules) && meta.referencedModules.length === 7, 'number of modules');
        t.deepEqual(meta.entries, [
            {
                "name": "Chinese",
                "path": "/zh_cn",
                "modules": [
                    "page",
                    "basics",
                    "schema"
                ]
            },
            {
                "name": "English",
                "path": "/us_en",
                "modules": [
                    "page",
                    "basics",
                    "schema"
                ]
            },
            {
                "name": "Root",
                "path": "/",
                "modules": [
                    "page",
                    "basics",
                    "schema"
                ]
            }
        ]);
    });
});
//# sourceMappingURL=meta_test.js.map