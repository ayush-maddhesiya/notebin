"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const test = require("blue-tape");
const test_1 = require("./test");
const index_1 = require("./index");
test('connect', function (t) {
    return __awaiter(this, void 0, void 0, function* () {
        const b2 = yield index_1.connect(test_1.TEST_CONFIG_FILE);
        t.equal(b2.name, 'B2 Documentation', 'name');
    });
});
test('B2.entry', function (t) {
    return __awaiter(this, void 0, void 0, function* () {
        const b2 = yield index_1.connect(test_1.TEST_CONFIG_FILE);
        t.throws(() => {
            b2.entry('FAKE');
        });
        const test = b2.entry('SDK Test');
        const product = test.schema.handle('product');
        const s = yield product.getSchema();
        t.equal(s.name, 'Product');
    });
});
//# sourceMappingURL=index_test.js.map