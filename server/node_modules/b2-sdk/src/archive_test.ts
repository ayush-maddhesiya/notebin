import test = require('blue-tape')
import {getTestClient} from './test'
import {B2Archive, B2ArchiveFileMeta} from './archive'
import Bluebird = require('bluebird')
import fs = require('fs')

async function get() {
  return new B2Archive(await getTestClient())
}

test("B2Archive.inspect", async function (t) {
  const a = await get()
  const meta = await a.inspect()
})

test("B2Archive.exportArchive", async function (t) {
  const a = await get()
  let providers = ['sdk_test_page']
  await a.exportArchive('./test_export.b2archive', providers)

  let meta: B2ArchiveFileMeta = JSON.parse(
    fs.readFileSync('./test_export.b2archive.metadata.json', 'utf8')
  )['metadata']

  t.deepEqual(
    meta.providers.map((p) => p.id).sort(),
    providers,
    'single provider'
  )

  fs.unlinkSync('./test_export.b2archive')
  fs.unlinkSync('./test_export.b2archive.metadata.json')

  providers = ['sdk_test_page', 'sdk_test_schema']
  await a.exportArchive('./test_export.b2archive', providers)

  meta = JSON.parse(
    fs.readFileSync('./test_export.b2archive.metadata.json', 'utf8')
  )['metadata']

  t.deepEqual(
    meta.providers.map((p) => p.id).sort(),
    providers,
    'multiple provider'
  )

  fs.unlinkSync('./test_export.b2archive')
  fs.unlinkSync('./test_export.b2archive.metadata.json')
})

test("B2Archive.importArchive", async function (t) {
  const a = await get()
  await a.exportArchive('./test_import.b2archive', ['sdk_test_page', 'sdk_test_schema'])

  await a.importArchive('./test_import.b2archive')

  fs.unlinkSync('./test_import.b2archive')
  fs.unlinkSync('./test_import.b2archive.metadata.json')
})