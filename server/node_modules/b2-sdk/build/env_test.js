"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const test = require("blue-tape");
const test_1 = require("./test");
const env_1 = require("./env");
function get() {
    return __awaiter(this, void 0, void 0, function* () {
        return new env_1.B2Env(yield test_1.getTestClient(), "/sdk_test");
    });
}
test("B2Env.get", (t) => __awaiter(void 0, void 0, void 0, function* () {
    const env = yield get();
    const values = yield env.get();
    t.assert(values && typeof values == "object");
    t.assert(values.k, "v");
}));
test("B2Env.put", (t) => __awaiter(void 0, void 0, void 0, function* () {
    const env = yield get();
    let values = yield env.get();
    const ts = Date.now().toString();
    values.ts = ts;
    yield env.set(values);
    values = yield env.get();
    t.assert(values.ts, ts);
}));
//# sourceMappingURL=env_test.js.map